{
    "AWSTemplateFormatVersion": "2010-09-09", 
    "Outputs": {
        "URL": {
            "Description": "URL of the Frontend website", 
            "Value": {
                "Fn::Join": [
                    "", 
                    [
                        "http://", 
                        {
                            "Fn::GetAtt": [
                                "ContributionsFrontendElasticLoadBalancer", 
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        }
    }, 
    "Parameters": {
        "Subnets": {
            "Default": "subnet-cb91ae8d, subnet-a7b74ac2, subnet-179e8063", 
            "Type": "CommaDelimitedList", 
            "Description": "The list of SubnetIds in your Virtual Private Cloud (VPC)"
        }, 
        "VpcId": {
            "Default": "vpc-e6e00183", 
            "Type": "String", 
            "Description": "VpcId of your existing Virtual Private Cloud (VPC)"
        }, 
        "SiteDomain": {
            "Type": "String", 
            "Description": "Site domain Name"
        }, 
        "ELBSSLCertificate": {
            "Type": "String", 
            "Description": "ELB SSL Certificate ARN"
        }, 
        "KeyName": {
            "Default": "aws-membership", 
            "Type": "String", 
            "Description": "The EC2 Key Pair to allow SSH access to the instance"
        }, 
        "AllowedIngressIps": {
            "Default": "0.0.0.0/0", 
            "Type": "String", 
            "Description": "IP address range (CIDR) that access the site (e.g. '77.91.248.0/21'- Internal Guardian, or '0.0.0.0/0' - the whole internet!)"
        }, 
        "Stack": {
            "Type": "String", 
            "Description": "Applied directly as a tag ('membership', or 'memb-masterclasses')"
        }, 
        "ImageId": {
            "Type": "String", 
            "Description": "AMI ID"
        }, 
        "InstanceType": {
            "Type": "String", 
            "ConstraintDescription": "must be a valid EC2 instance type.", 
            "Description": "EC2 instance type", 
            "AllowedValues": [
                "t2.micro", 
                "t2.medium", 
                "m3.medium"
            ]
        }, 
        "Stage": {
            "Default": "PROD", 
            "Type": "String", 
            "Description": "Applied directly as a tag"
        }
    }, 
    "Description": "contributions-app", 
    "Resources": {
        "ContributionsFrontendElasticLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer", 
            "Properties": {
                "ConnectionDrainingPolicy": {
                    "Enabled": "true", 
                    "Timeout": "60"
                }, 
                "Subnets": {
                    "Ref": "Subnets"
                }, 
                "Listeners": [
                    {
                        "InstancePort": 9000, 
                        "Protocol": "HTTPS", 
                        "LoadBalancerPort": "443", 
                        "SSLCertificateId": {
                            "Ref": "ELBSSLCertificate"
                        }
                    }
                ], 
                "SecurityGroups": [
                    {
                        "Ref": "LoadBalancerSecurityGroup"
                    }
                ], 
                "HealthCheck": {
                    "HealthyThreshold": "2", 
                    "Interval": "10", 
                    "Target": "HTTP:9000/healthcheck", 
                    "Timeout": "5", 
                    "UnhealthyThreshold": "2"
                }
            }
        }, 
        "LoadBalancerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup", 
            "Properties": {
                "SecurityGroupIngress": [
                    {
                        "ToPort": "80", 
                        "IpProtocol": "tcp", 
                        "FromPort": "80", 
                        "CidrIp": {
                            "Ref": "AllowedIngressIps"
                        }
                    }, 
                    {
                        "ToPort": "443", 
                        "IpProtocol": "tcp", 
                        "FromPort": "443", 
                        "CidrIp": {
                            "Ref": "AllowedIngressIps"
                        }
                    }, 
                    {
                        "ToPort": "80", 
                        "IpProtocol": "tcp", 
                        "FromPort": "80", 
                        "CidrIp": "80.254.158.92/32"
                    }, 
                    {
                        "ToPort": "80", 
                        "IpProtocol": "tcp", 
                        "FromPort": "80", 
                        "CidrIp": "80.254.146.68/32"
                    }
                ], 
                "VpcId": {
                    "Ref": "VpcId"
                }, 
                "GroupDescription": "Permit incoming HTTP access on port 80, egress to port 9000", 
                "SecurityGroupEgress": [
                    {
                        "ToPort": "9000", 
                        "IpProtocol": "tcp", 
                        "FromPort": "9000", 
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        }, 
        "ContributionsAppInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile", 
            "Properties": {
                "Path": "/", 
                "Roles": [
                    {
                        "Ref": "MembershipAppRole"
                    }
                ]
            }
        }, 
        "MembershipAppRole": {
            "Type": "AWS::IAM::Role", 
            "Properties": {
                "Path": "/", 
                "Policies": [
                    {
                        "PolicyName": "PrivateBucket", 
                        "PolicyDocument": {
                            "Version": "2012-10-17", 
                            "Statement": [
                                {
                                    "Action": "s3:GetObject", 
                                    "Resource": "arn:aws:s3:::contributions-private/*", 
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }, 
                    {
                        "PolicyName": "PushMetrics", 
                        "PolicyDocument": {
                            "Version": "2012-10-17", 
                            "Statement": [
                                {
                                    "Action": [
                                        "cloudwatch:PutMetricData"
                                    ], 
                                    "Resource": "*", 
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }, 
                    {
                        "PolicyName": "PushLogs", 
                        "PolicyDocument": {
                            "Version": "2012-10-17", 
                            "Statement": [
                                {
                                    "Action": [
                                        "logs:*"
                                    ], 
                                    "Resource": [
                                        "arn:aws:logs:*:*:*"
                                    ], 
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }
                ], 
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ], 
                            "Effect": "Allow", 
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ]
                }
            }
        }, 
        "FrontendAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup", 
            "Properties": {
                "AvailabilityZones": {
                    "Fn::GetAZs": ""
                }, 
                "DesiredCapacity": "3", 
                "Tags": [
                    {
                        "Value": {
                            "Ref": "Stack"
                        }, 
                        "PropagateAtLaunch": "true", 
                        "Key": "Stack"
                    }, 
                    {
                        "Value": "contributions-frontend", 
                        "PropagateAtLaunch": "true", 
                        "Key": "App"
                    }, 
                    {
                        "Value": {
                            "Ref": "Stage"
                        }, 
                        "PropagateAtLaunch": "true", 
                        "Key": "Stage"
                    }
                ], 
                "LaunchConfigurationName": {
                    "Ref": "FrontendLaunchConfig"
                }, 
                "MinSize": "3", 
                "MaxSize": "6", 
                "VPCZoneIdentifier": {
                    "Ref": "Subnets"
                }, 
                "LoadBalancerNames": [
                    {
                        "Ref": "FrontendElasticLoadBalancer"
                    }
                ], 
                "HealthCheckGracePeriod": 300, 
                "HealthCheckType": "ELB"
            }
        }, 
        "FrontendELBDNSrecord": {
            "Type": "AWS::Route53::RecordSet", 
            "Properties": {
                "Comment": "CNAME for AWS ELB", 
                "Name": {
                    "Fn::Join": [
                        ".", 
                        [
                            {
                                "Ref": "SiteDomain"
                            }, 
                            "origin.membership.guardianapis.com."
                        ]
                    ]
                }, 
                "TTL": "120", 
                "HostedZoneId": "/hostedzone/Z1E4V12LQGXFEC", 
                "Type": "CNAME", 
                "ResourceRecords": [
                    {
                        "Fn::GetAtt": [
                            "ContributionsFrontendElasticLoadBalancer", 
                            "DNSName"
                        ]
                    }
                ]
            }
        }, 
        "InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup", 
            "Properties": {
                "SecurityGroupIngress": [
                    {
                        "ToPort": "22", 
                        "IpProtocol": "tcp", 
                        "FromPort": "22", 
                        "CidrIp": "77.91.248.0/21"
                    }, 
                    {
                        "ToPort": "9000", 
                        "IpProtocol": "tcp", 
                        "FromPort": "9000", 
                        "CidrIp": "77.91.248.0/21"
                    }, 
                    {
                        "ToPort": "9000", 
                        "IpProtocol": "tcp", 
                        "SourceSecurityGroupId": {
                            "Ref": "LoadBalancerSecurityGroup"
                        }, 
                        "FromPort": "9000"
                    }
                ], 
                "VpcId": {
                    "Ref": "VpcId"
                }, 
                "GroupDescription": "Open up SSH access and enable HTTP access on the configured port"
            }
        }, 
        "FrontendLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration", 
            "Properties": {
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n", 
                            [
                                "#!/bin/bash -ev", 
                                "apt-get -y update", 
                                "apt-get -y upgrade", 
                                "/opt/features/ssh-keys/initialise-keys-and-cron-job.sh -l -b github-team-keys -t Membership-and-Subscriptions || true \n", 
                                {
                                    "Fn::Join": [
                                        "", 
                                        [
                                            "aws --region ", 
                                            {
                                                "Ref": "AWS::Region"
                                            }, 
                                            " s3 cp s3://membership-dist/contributions", 
                                            {
                                                "Ref": "Stage"
                                            }, 
                                            "/contributions-frontend_1.0-SNAPSHOT_all.deb /tmp"
                                        ]
                                    ]
                                }, 
                                "mkdir /etc/gu", 
                                {
                                    "Fn::Join": [
                                        "", 
                                        [
                                            "aws --region ", 
                                            {
                                                "Ref": "AWS::Region"
                                            }, 
                                            " s3 cp s3://contributions-private/", 
                                            {
                                                "Ref": "Stage"
                                            }, 
                                            "/giraffe-keys.conf /etc/gu"
                                        ]
                                    ]
                                }, 
                                "chown contributions-frontend /etc/gu/giraffe-keys.conf", 
                                "chmod 0600 /etc/gu/giraffe-keys.conf", 
                                "wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py", 
                                {
                                    "Fn::Join": [
                                        "", 
                                        [
                                            "sed -i", 
                                            " -e \"s/__DATE/$(date +%F)/\"", 
                                            " -e \"s/__BUILD/$(cat $CONF_DIR/build.txt)/\"", 
                                            " -e 's/__STAGE/", 
                                            {
                                                "Ref": "Stage"
                                            }, 
                                            "/'", 
                                            " $CONF_DIR/logger.conf"
                                        ]
                                    ]
                                }, 
                                {
                                    "Fn::Join": [
                                        " ", 
                                        [
                                            "python awslogs-agent-setup.py -nr", 
                                            {
                                                "Ref": "AWS::Region"
                                            }, 
                                            "-c $CONF_DIR/logger.conf"
                                        ]
                                    ]
                                }, 
                                "dpkg -i /tmp/contributions-frontend_1.0-SNAPSHOT.all.deb"
                            ]
                        ]
                    }
                }, 
                "KeyName": {
                    "Ref": "KeyName"
                }, 
                "SecurityGroups": [
                    {
                        "Ref": "InstanceSecurityGroup"
                    }
                ], 
                "IamInstanceProfile": {
                    "Ref": "ContributionsAppInstanceProfile"
                }, 
                "InstanceType": {
                    "Ref": "InstanceType"
                }, 
                "AssociatePublicIpAddress": true, 
                "ImageId": {
                    "Ref": "ImageId"
                }
            }
        }
    }
}